name: Deploy MSS Stock Tick and Fundamentals Data Collector Lambdas

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  actions: read

# github org vars and secrets
env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  SHARED_DATA_BUCKET: ${{ vars.SHARED_DATA_BUCKET }}
  SHARED_BUILD_DATA_BUCKET: ${{ vars.SHARED_BUILD_DATA_BUCKET }}
  ALPHAVANTAGE_API_KEY: ${{ secrets.ALPHAVANTAGE_API_KEY }}
  TICKS_LAMBDA_NAME: ${{ vars.MSS_STOCK_DATA_SOURCE_LAMBDA_NAME }}
  FUNDAMENTALS_LAMBDA_NAME: ${{ vars.MSS_STOCK_FUNDA_DATA_SOURCE_LAMBDA_NAME }}
  MSS_STOCK_DATA_SOURCE_VERSION: 1.0.0
  LAMBDA_ZIP_IN_BUILD_BUCKET: ${{ vars.FILENAME_OF_STOCK_DATA_LAMBDAS_ON_S3_BUILD_BUCKET }}
  LOCAL_LAMBDA_FILE: lambda.zip

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Download $TICKS_LAMBDA_NAME and $FUNDAMENTALS_LAMBDA_NAME artifact from S3 build bucket (The same artifact is used for both lambdas)
        run: |
          aws s3 cp s3://${SHARED_BUILD_DATA_BUCKET}/deploy/mss-stock-data-source/${MSS_STOCK_DATA_SOURCE_VERSION}/${LAMBDA_ZIP_IN_BUILD_BUCKET}.zip $LOCAL_LAMBDA_FILE.zip

      - name: Init Terraform
        working-directory: terraform/mss-stock-data-source
        run: terraform init -input=false -upgrade

      - name: Terraform Format Check
        working-directory: terraform/mss-stock-data-source
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        working-directory: terraform/mss-stock-data-source
        run: terraform validate

      - name: Write Terraform variable file
        working-directory: terraform/mss-stock-data-source
        run: |
          cat <<EOF > ci.auto.tfvars
          lambda_version            = "${MSS_STOCK_DATA_SOURCE_VERSION}"
          app_data_bucket           = "${SHARED_DATA_BUCKET}"
          build_data_bucket         = "${SHARED_BUILD_DATA_BUCKET}"
          lambda_name               = "${TICKS_LAMBDA_NAME}"
          alphavantage_api_key      = "${ALPHAVANTAGE_API_KEY}"
          artifact_key              = "deploy/mss-stock-data-source/${MSS_STOCK_DATA_SOURCE_VERSION}/${LOCAL_LAMBDA_FILE}.zip"
          fundamentals_artifact_key   = "deploy/mss-stock-data-source/${MSS_STOCK_DATA_SOURCE_VERSION}/${LOCAL_LAMBDA_FILE}.zip"
          EOF

      - name: Terraform plan (ticks)
        working-directory: terraform/mss-stock-data-source
        run: terraform plan -input=false -var-file=ci.auto.tfvars

      - name: Terraform Import IAM Role
        working-directory: terraform/mss-stock-data-source
        run: terraform import -input=false -var-file=ci.auto.tfvars aws_iam_role.lambda_exec_role mss-lambda-exec-role || true

      - name: Terraform Import Lambda Function
        working-directory: terraform/mss-stock-data-source
        run: terraform import -input=false -var-file=ci.auto.tfvars aws_lambda_function.stock_data_lambda $TICKS_LAMBDA_NAME || true

      - name: Terraform Import Lambda Allow Events Permission
        working-directory: terraform/mss-stock-data-source
        run: terraform import -input=false -var-file=ci.auto.tfvars aws_lambda_permission.allow_events $TICKS_LAMBDA_NAME/AllowExecutionFromCloudWatch || true

      - name: Terraform apply
        working-directory: terraform/mss-stock-data-source
        run: terraform apply -input=false -auto-approve -var-file=ci.auto.tfvars

      - name: Write Terraform variable file for fundamentals lambda
        working-directory: terraform/mss-stock-data-source
        run: |
          cat <<EOF > ci.fundamentals.auto.tfvars
          lambda_version              = "${MSS_STOCK_DATA_SOURCE_VERSION}"
          app_data_bucket             = "${SHARED_DATA_BUCKET}"
          build_data_bucket           = "${SHARED_BUILD_DATA_BUCKET}"
          fundamentals_lambda_name    = "${FUNDAMENTALS_LAMBDA_NAME}"
          alphavantage_api_key        = "${ALPHAVANTAGE_API_KEY}"
          artifact_key              = "deploy/mss-stock-data-source/${MSS_STOCK_DATA_SOURCE_VERSION}/${LOCAL_LAMBDA_FILE}.zip"
          fundamentals_artifact_key   = "deploy/mss-stock-data-source/${MSS_STOCK_DATA_SOURCE_VERSION}/${LOCAL_LAMBDA_FILE}.zip"
          run_mode_fundamentals       = "fundamentals"
          EOF

      - name: Terraform plan (fundamentals)
        working-directory: terraform/mss-stock-data-source
        run: terraform plan -input=false -var-file=ci.fundamentals.auto.tfvars

      - name: Terraform Import Fundamentals Lambda IAM Role
        working-directory: terraform/mss-stock-data-source
        run: terraform import -input=false -var-file=ci.fundamentals.auto.tfvars aws_iam_role.fundamentals_lambda_exec_role mss-fundamentals-lambda-exec-role || true

      - name: Terraform Import Fundamentals Lambda Function
        working-directory: terraform/mss-stock-data-source
        run: terraform import -input=false -var-file=ci.fundamentals.auto.tfvars aws_lambda_function.fundamentals_lambda $FUNDAMENTALS_LAMBDA_NAME || true

      - name: Terraform Import Fundamentals Lambda Allow Events Permission
        working-directory: terraform/mss-stock-data-source
        run: terraform import -input=false -var-file=ci.fundamentals.auto.tfvars aws_lambda_permission.fundamentals_allow_events $FUNDAMENTALS_LAMBDA_NAME/AllowExecutionFromCloudWatch || true

      - name: Terraform apply (fundamentals)
        working-directory: terraform/mss-stock-data-source
        run: terraform apply -input=false -auto-approve -var-file=ci.fundamentals.auto.tfvars
